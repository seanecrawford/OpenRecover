name: Windows Build (EXE + Installer)

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.15

      - name: Clean old build
        shell: pwsh
        run: |
          if (Test-Path dist)  { Remove-Item dist  -Recurse -Force }
          if (Test-Path build) { Remove-Item build -Recurse -Force }

      - name: Build EXE (PyInstaller)
        shell: pwsh
        run: |
          pyinstaller -F -w -n SprigOpenRecover `
            --paths src `
            --collect-all PySide6 `
            --collect-qt-plugins=platforms,styles,imageformats `
            --hidden-import PySide6 `
            --hidden-import PySide6.QtCore `
            --hidden-import PySide6.QtGui `
            --hidden-import PySide6.QtWidgets `
            --add-data "src/openrecover/assets/spriglogo.png;openrecover/assets" `
            src/main.py

      - name: Locate built EXE
        id: findexe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path dist -Filter SprigOpenRecover.exe -Recurse | Select-Object -First 1
          if (-not $exe) { throw "SprigOpenRecover.exe not found under dist" }
          echo "EXE_PATH=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "EXE_PATH=$($exe.FullName)"

      - name: Install Inno Setup
        run: choco install innosetup --no-progress

      - name: Build installer (ISCC)
        shell: pwsh
        run: |
          $iscc = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
          & $iscc installer\OpenRecoverProQt.iss /DEXEPath="$env:EXE_PATH"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows-build
          path: |
            ${{ env.EXE_PATH }}
            installer\Output\*.exe
